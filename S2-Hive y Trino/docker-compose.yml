version: '3.7'

networks:
  hdfs_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  hive-db:
  warehouse:

services:
  # PostgreSQL para el metastore de Hive
  postgres:
    image: postgres:14
    restart: unless-stopped
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: 'metastore_db'
      POSTGRES_USER: 'hive'
      POSTGRES_PASSWORD: 'password'
    ports:
      - '5432:5432'
    volumes:
      - hive-db:/var/lib/postgresql/data
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.7

  # Metastore de Hive
  metastore:
    image: apache/hive:4.0.1
    depends_on:
      - postgres
      - namenode
    restart: unless-stopped
    container_name: metastore
    hostname: metastore
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: 'metastore'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
                     -Djavax.jdo.option.ConnectionUserName=hive
                     -Djavax.jdo.option.ConnectionPassword=password
                     -Dhive.metastore.warehouse.dir=hdfs://namenode:9000/user/hive/warehouse
                     -Dfs.defaultFS=hdfs://namenode:9000'
    ports:
      - '9083:9083'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./hive/conf/postgresql-42.3.8.jar:/opt/hive/lib/postgresql.jar  # ⬅ Montar el driver correctamente

    networks:
      hdfs_network:
        ipv4_address: 172.20.0.8

  # HiveServer2
  hiveserver2:
    image: apache/hive:4.0.1
    depends_on:
      - metastore
      - namenode
    
    container_name: hiveserver2
    hostname: hiveserver2
    environment:
      DB_DRIVER: postgres
      HIVE_SERVER2_THRIFT_PORT: 10000
      SERVICE_OPTS: '-Xmx1G -Dhive.metastore.uris=thrift://metastore:9083
                     -Dhive.metastore.warehouse.dir=hdfs://namenode:9000/user/hive/warehouse
                     -Dfs.defaultFS=hdfs://namenode:9000'
      SERVICE_NAME: 'hiveserver2'
    ports:
      - '10000:10000'
      - '10002:10002'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./hive/conf/postgresql-42.3.8.jar:/opt/hive/lib/postgresql.jar  # ⬅ Montar el driver correctamente
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.9

  # Nodo Maestro de HDFS
  namenode:
    build: .
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      HADOOP_HOME: /opt/hadoop
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop
      HADOOP_MAPRED_HOME: /opt/hadoop
      HADOOP_YARN_HOME: /opt/hadoop     
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/common/lib/*
    volumes:
      - ./hadoop_namenode:/opt/hadoop/data/nameNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/start-hdfs.sh:/start-hdfs.sh
    ports:
      - "9870:9870"
      - "9000:9000"
    command: ["/bin/bash", "/start-hdfs.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.2

  # Nodos de almacenamiento de HDFS
  datanode1:
    build: .
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      HADOOP_HOME: /opt/hadoop
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop
      HADOOP_MAPRED_HOME: /opt/hadoop
      HADOOP_YARN_HOME: /opt/hadoop     
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/common/lib/*
    volumes:
      - ./hadoop_datanode1:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: ["/bin/bash", "/init-datanode.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.3

  datanode2:
    build: .
    container_name: datanode2
    hostname: datanode2
    user: root
    environment:
      HADOOP_HOME: /opt/hadoop
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop
      HADOOP_MAPRED_HOME: /opt/hadoop
      HADOOP_YARN_HOME: /opt/hadoop     
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/common/lib/*
    volumes:
      - ./hadoop_datanode2:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: ["/bin/bash", "/init-datanode.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.4

  # YARN Resource Manager
  resourcemanager:
    build: .
    container_name: resourcemanager
    hostname: resourcemanager
    user: root
    environment:
      HADOOP_HOME: /opt/hadoop
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop
      HADOOP_MAPRED_HOME: /opt/hadoop
      HADOOP_YARN_HOME: /opt/hadoop   
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/common/lib/*
    volumes:
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/start-yarn.sh:/start-yarn.sh
    ports:
      - "8088:8088"
      - "8030:8030"
      - "8031:8031"
      - "8032:8032"
      - "8033:8033"
    depends_on:
      - namenode
    command: ["/bin/bash", "/start-yarn.sh"]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.5

  # YARN Node Manager
  nodemanager:
    build: .
    container_name: nodemanager
    hostname: nodemanager
    user: root
    environment:
      HADOOP_HOME: /opt/hadoop
      HADOOP_CONF_DIR: /opt/hadoop/etc/hadoop
      HADOOP_MAPRED_HOME: /opt/hadoop
      HADOOP_YARN_HOME: /opt/hadoop
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/common/lib/*
    volumes:
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/start-nodemanager.sh:/start-nodemanager.sh
      - ./scripts/yarn-env.sh:/opt/hadoop/etc/hadoop/yarn-env.sh
    depends_on:
      - resourcemanager
    command: ["/bin/bash", "/start-nodemanager.sh"]
    ports:
      - "8042:8042"
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.6
