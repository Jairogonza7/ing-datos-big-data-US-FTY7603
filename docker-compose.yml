services:
  namenode:
    image: apache/hadoop:3.4.1
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./hadoop_namenode:/opt/hadoop/data/nameNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/start-hdfs.sh:/start-hdfs.sh
    ports:
      - "9870:9870"
      - "9000:9000"
      - "50070:50070"

    command: [ "/bin/bash", "/start-hdfs.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.2

  datanode1:
    image: apache/hadoop:3.4.1
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./hadoop_datanode1:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: [ "/bin/bash", "/init-datanode.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.3

  datanode2:
    image: apache/hadoop:3.4.1
    container_name: datanode2
    hostname: datanode2
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./hadoop_datanode2:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: [ "/bin/bash", "/init-datanode.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.4
      
  resourcemanager:
    build: .
    container_name: resourcemanager
    hostname: resourcemanager
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./hadoop_config:/opt/hadoop/etc/hadoop  # Montamos la config
      - ./scripts/start-yarn.sh:/start-yarn.sh
    ports:
      - "8088:8088"  # Interfaz web de YARN
      - "8030:8030"  # Comunicación con aplicaciones
      - "8031:8031"
      - "8032:8032"
      - "8033:8033"
    depends_on:
      - namenode
    command: [ "/bin/bash", "/start-yarn.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.5
    

  nodemanager:
    build: . #image: apache/hadoop:3.4.1
    container_name: nodemanager
    hostname: nodemanager
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
    volumes:
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./scripts/start-nodemanager.sh:/start-nodemanager.sh
    depends_on:
      - resourcemanager
    command: [ "/bin/bash", "/start-nodemanager.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.6
    ports:
      - "8042:8042"  # Exponemos la interfaz del NodeManager
  
  ### Sesión 2 ###
  mysql:

    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: metastore
      MYSQL_USER: hive

      MYSQL_PASSWORD: hivepassword
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.9

  hive:
    build: ./hive
    container_name: hive
    hostname: hive
    restart: unless-stopped
    user: root
    environment:
      - SERVICE_NAME=metastore
      - HIVE_metastore_TYPE=mysql
      - HIVE_JDBC_URL=jdbc:mysql://mysql:3306/metastore
      - HIVE_METASTORE_USER=hive
      - HIVE_METASTORE_PASSWORD=hivepassword
    volumes:
      - ./hive/conf:/opt/hive/conf
      - ./hive/data:/opt/hive/data
      - ./hive/logs:/opt/hive/logs
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/init-hive.sh"]
    ports:
      - "9083:9083"
      - "10000:10000"
    depends_on:
      - mysql
      - namenode
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.8



  trino:
    image: trinodb/trino:470
    container_name: trino
    hostname: trino
    user: root
    environment:
      - TRINO_CONFIG_DIR=/etc/trino
    volumes:
      - ./trino-config:/etc/trino
      - ./trino-config/catalog:/etc/trino/catalog
    ports:
      - "8080:8080"  # Interfaz web de Trino
    depends_on:
      - hive
      - namenode
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.7

  

networks:
  hdfs_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:  # Asegurar que el volumen está definido aquí

